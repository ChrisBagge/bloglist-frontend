{
  "timestamp": 1651223119928,
  "tag": "runtime.welcome",
  "level": 1,
  "message": "js-debug v1.66.1 started",
  "metadata": {
    "os": "linux x64",
    "nodeVersion": "v16.13.0",
    "adapterVersion": "1.66.1"
  }
}
{
  "tag": "dap.receive",
  "timestamp": 1651223119917,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "initialize",
      "arguments": {
        "clientID": "vscode",
        "clientName": "Visual Studio Code",
        "adapterID": "pwa-chrome",
        "pathFormat": "path",
        "linesStartAt1": true,
        "columnsStartAt1": true,
        "supportsVariableType": true,
        "supportsVariablePaging": true,
        "supportsRunInTerminalRequest": true,
        "locale": "en-us",
        "supportsProgressReporting": true,
        "supportsInvalidatedEvent": true,
        "supportsMemoryReferences": true
      },
      "type": "request",
      "seq": 1
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223119917,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 1,
      "type": "response",
      "request_seq": 1,
      "command": "initialize",
      "success": true,
      "body": {
        "supportsConfigurationDoneRequest": true,
        "supportsFunctionBreakpoints": false,
        "supportsConditionalBreakpoints": true,
        "supportsHitConditionalBreakpoints": true,
        "supportsEvaluateForHovers": true,
        "supportsReadMemoryRequest": true,
        "supportsWriteMemoryRequest": true,
        "exceptionBreakpointFilters": [
          {
            "filter": "all",
            "label": "Caught Exceptions",
            "default": false,
            "supportsCondition": true,
            "description": "Breaks on all throw errors, even if they're caught later.",
            "conditionDescription": "error.name == \"MyError\""
          },
          {
            "filter": "uncaught",
            "label": "Uncaught Exceptions",
            "default": false,
            "supportsCondition": true,
            "description": "Breaks only on errors or promise rejections that are not handled.",
            "conditionDescription": "error.name == \"MyError\""
          }
        ],
        "supportsStepBack": false,
        "supportsSetVariable": true,
        "supportsRestartFrame": true,
        "supportsGotoTargetsRequest": false,
        "supportsStepInTargetsRequest": false,
        "supportsCompletionsRequest": true,
        "supportsModulesRequest": false,
        "additionalModuleColumns": [],
        "supportedChecksumAlgorithms": [],
        "supportsRestartRequest": true,
        "supportsExceptionOptions": false,
        "supportsValueFormattingOptions": true,
        "supportsExceptionInfoRequest": true,
        "supportTerminateDebuggee": false,
        "supportsDelayedStackTraceLoading": true,
        "supportsLoadedSourcesRequest": true,
        "supportsLogPoints": true,
        "supportsTerminateThreadsRequest": false,
        "supportsSetExpression": true,
        "supportsTerminateRequest": false,
        "completionTriggerCharacters": [
          ".",
          "[",
          "\"",
          "'"
        ],
        "supportsBreakpointLocationsRequest": true,
        "supportsClipboardContext": true,
        "supportsExceptionFilterOptions": true
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223119917,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 2,
      "type": "event",
      "event": "initialized",
      "body": {}
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223119922,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "attach",
      "arguments": {
        "type": "pwa-chrome",
        "name": "attach to chrome",
        "request": "attach",
        "trace": {
          "console": false,
          "level": "verbose",
          "stdio": true,
          "logFile": "/home/chris/.vscode-server/data/logs/20220428T191349/exthost2/ms-vscode.js-debug/vscode-debugadapter-5081af0d.json.gz",
          "tags": []
        },
        "outputCapture": "console",
        "timeout": 10000,
        "timeouts": {},
        "showAsyncStacks": true,
        "skipFiles": [],
        "smartStep": true,
        "sourceMaps": true,
        "sourceMapRenames": true,
        "pauseForSourceMap": true,
        "resolveSourceMapLocations": null,
        "rootPath": "/home/chris/code/bloglist-frontend",
        "outFiles": [
          "/home/chris/code/bloglist-frontend/**/*.js",
          "!**/node_modules/**"
        ],
        "sourceMapPathOverrides": {
          "webpack:///./~/*": "${webRoot}/node_modules/*",
          "webpack:////*": "/*",
          "webpack://?:*/*": "${webRoot}/*",
          "webpack:///([a-z]):/(.+)": "$1:/$2",
          "meteor://ðŸ’»app/*": "${webRoot}/*"
        },
        "enableContentValidation": true,
        "cascadeTerminateToConfigurations": [],
        "__workspaceFolder": "/home/chris/code/bloglist-frontend",
        "__breakOnConditionalError": false,
        "address": "localhost",
        "port": 9222,
        "disableNetworkCache": true,
        "pathMapping": {},
        "url": null,
        "restart": false,
        "urlFilter": "",
        "webRoot": "/home/chris/code/bloglist-frontend",
        "server": null,
        "browserAttachLocation": "ui",
        "targetSelection": "automatic",
        "vueComponentPaths": [
          "/home/chris/code/bloglist-frontend/**/*.vue",
          "!**/node_modules/**"
        ],
        "perScriptSourcemaps": "auto",
        "__configurationTarget": 5,
        "__workspaceCachePath": "/home/chris/.vscode-server/data/User/workspaceStorage/e3dcf6079a69420a41978da582980d31/ms-vscode.js-debug",
        "__sessionId": "e2ff615d-5f39-4ab9-bfd0-0c06956de66b"
      },
      "type": "request",
      "seq": 2
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223119923,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 3,
      "type": "event",
      "event": "output",
      "body": {
        "category": "telemetry",
        "output": "js-debug/launch",
        "data": {
          "type": "pwa-chrome",
          "request": "attach",
          "os": "linux x64",
          "nodeVersion": "v16.13.0",
          "adapterVersion": "1.66.1",
          "parameters": "{\"type\":\"pwa-chrome\",\"name\":\"<string>\",\"request\":\"attach\",\"trace\":{\"console\":false,\"level\":\"<string>\",\"stdio\":true,\"logFile\":\"<string>\",\"tags\":[]},\"outputCapture\":\"console\",\"timeout\":10000,\"timeouts\":{},\"showAsyncStacks\":true,\"skipFiles\":[],\"smartStep\":true,\"sourceMaps\":true,\"sourceMapRenames\":true,\"pauseForSourceMap\":true,\"resolveSourceMapLocations\":null,\"rootPath\":\"<string>\",\"outFiles\":[\"<string>\",\"<string>\"],\"sourceMapPathOverrides\":{\"webpack:///./~/*\":\"<string>\",\"webpack:////*\":\"<string>\",\"webpack://?:*/*\":\"<string>\",\"webpack:///([a-z]):/(.+)\":\"<string>\",\"meteor://ðŸ’»app/*\":\"<string>\"},\"enableContentValidation\":true,\"cascadeTerminateToConfigurations\":[],\"__workspaceFolder\":\"<string>\",\"__breakOnConditionalError\":false,\"address\":\"localhost\",\"port\":9222,\"disableNetworkCache\":true,\"pathMapping\":{},\"url\":null,\"restart\":false,\"urlFilter\":\"\",\"webRoot\":\"<string>\",\"server\":null,\"browserAttachLocation\":\"<string>\",\"targetSelection\":\"automatic\",\"vueComponentPaths\":[\"<string>\",\"<string>\"],\"perScriptSourcemaps\":\"auto\",\"__configurationTarget\":5,\"__workspaceCachePath\":\"<string>\",\"__sessionId\":\"<string>\"}"
        }
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223119926,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 4,
      "type": "event",
      "event": "output",
      "body": {
        "category": "console",
        "output": "Verbose logs are written to:\n/home/chris/.vscode-server/data/logs/20220428T191349/exthost2/ms-vscode.js-debug/vscode-debugadapter-5081af0d.json.gz\n"
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223119929,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 5,
      "type": "event",
      "event": "launchBrowserInCompanion",
      "body": {
        "type": "chrome",
        "params": {
          "type": "pwa-chrome",
          "name": "attach to chrome",
          "request": "attach",
          "trace": {
            "console": false,
            "level": "verbose",
            "stdio": true,
            "logFile": "/home/chris/.vscode-server/data/logs/20220428T191349/exthost2/ms-vscode.js-debug/vscode-debugadapter-5081af0d.json.gz",
            "tags": []
          },
          "outputCapture": "console",
          "timeout": null,
          "timeouts": {},
          "showAsyncStacks": true,
          "skipFiles": [],
          "smartStep": true,
          "sourceMaps": true,
          "sourceMapRenames": true,
          "pauseForSourceMap": true,
          "resolveSourceMapLocations": null,
          "rootPath": "/home/chris/code/bloglist-frontend",
          "outFiles": [
            "/home/chris/code/bloglist-frontend/**/*.js",
            "!**/node_modules/**"
          ],
          "sourceMapPathOverrides": {
            "webpack:///./~/*": "/home/chris/code/bloglist-frontend/node_modules/*",
            "webpack:////*": "/*",
            "webpack://?:*/*": "/home/chris/code/bloglist-frontend/*",
            "webpack:///([a-z]):/(.+)": "$1:/$2",
            "meteor://ðŸ’»app/*": "/home/chris/code/bloglist-frontend/*"
          },
          "enableContentValidation": true,
          "cascadeTerminateToConfigurations": [],
          "__workspaceFolder": "/home/chris/code/bloglist-frontend",
          "__breakOnConditionalError": false,
          "address": "localhost",
          "port": 9222,
          "disableNetworkCache": true,
          "pathMapping": {},
          "url": null,
          "restart": false,
          "urlFilter": "",
          "webRoot": "/home/chris/code/bloglist-frontend",
          "server": null,
          "browserAttachLocation": "ui",
          "targetSelection": "automatic",
          "vueComponentPaths": [
            "/home/chris/code/bloglist-frontend/**/*.vue",
            "!**/node_modules/**"
          ],
          "perScriptSourcemaps": "auto",
          "__configurationTarget": 5,
          "__workspaceCachePath": "/home/chris/.vscode-server/data/User/workspaceStorage/e3dcf6079a69420a41978da582980d31/ms-vscode.js-debug",
          "__sessionId": "e2ff615d-5f39-4ab9-bfd0-0c06956de66b"
        },
        "attach": {
          "host": "localhost",
          "port": 9222
        },
        "serverPort": 53495,
        "path": "/464ab2661f83cfce27ace3f1636117572c759aa3",
        "launchId": 19
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223119930,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "setBreakpoints",
      "arguments": {
        "source": {
          "name": "App.tsx",
          "path": "/home/chris/code/bloglist-frontend/src/App.tsx"
        },
        "lines": [
          54,
          62,
          67
        ],
        "breakpoints": [
          {
            "line": 54
          },
          {
            "line": 62
          },
          {
            "line": 67
          }
        ],
        "sourceModified": false
      },
      "type": "request",
      "seq": 3
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223119933,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "setBreakpoints",
      "arguments": {
        "source": {
          "name": "Blog.tsx",
          "path": "/home/chris/code/bloglist-frontend/src/components/Blog.tsx"
        },
        "lines": [
          6
        ],
        "breakpoints": [
          {
            "line": 6
          }
        ],
        "sourceModified": false
      },
      "type": "request",
      "seq": 4
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223119933,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 6,
      "type": "response",
      "request_seq": 3,
      "command": "setBreakpoints",
      "success": true,
      "body": {
        "breakpoints": [
          {
            "id": 1,
            "verified": false,
            "message": "Unbound breakpoint"
          },
          {
            "id": 2,
            "verified": false,
            "message": "Unbound breakpoint"
          },
          {
            "id": 3,
            "verified": false,
            "message": "Unbound breakpoint"
          }
        ]
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223119933,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 7,
      "type": "response",
      "request_seq": 4,
      "command": "setBreakpoints",
      "success": true,
      "body": {
        "breakpoints": [
          {
            "id": 4,
            "verified": false,
            "message": "Unbound breakpoint"
          }
        ]
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223119990,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "setExceptionBreakpoints",
      "arguments": {
        "filters": [],
        "filterOptions": []
      },
      "type": "request",
      "seq": 5
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223119990,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 8,
      "type": "response",
      "request_seq": 5,
      "command": "setExceptionBreakpoints",
      "success": true,
      "body": {}
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223119995,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "configurationDone",
      "type": "request",
      "seq": 6
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223119995,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 9,
      "type": "response",
      "request_seq": 6,
      "command": "configurationDone",
      "success": true,
      "body": {}
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223120000,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "threads",
      "type": "request",
      "seq": 7
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223120000,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 10,
      "type": "response",
      "request_seq": 7,
      "command": "threads",
      "success": true,
      "body": {
        "threads": []
      }
    }
  },
  "level": 0
}
{
  "tag": "cdp.send",
  "timestamp": 1651223120641,
  "metadata": {
    "connectionId": 18,
    "message": {
      "id": 1001,
      "method": "Target.attachToBrowserTarget",
      "params": {}
    }
  },
  "level": 0
}
{
  "tag": "cdp.receive",
  "timestamp": 1651223120646,
  "metadata": {
    "connectionId": 18
  },
  "level": 1
}
{
  "tag": "runtime.launch",
  "timestamp": 1651223120646,
  "message": "Launched successfully",
  "metadata": {
    "name": "h"
  },
  "level": 1
}
{
  "tag": "dap.send",
  "timestamp": 1651223120647,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 11,
      "type": "response",
      "request_seq": 2,
      "command": "attach",
      "success": true,
      "body": {}
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223120693,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "loadedSources",
      "type": "request",
      "seq": 8
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223120693,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 12,
      "type": "response",
      "request_seq": 8,
      "command": "loadedSources",
      "success": true,
      "body": {
        "sources": []
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223124918,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 13,
      "type": "event",
      "event": "output",
      "body": {
        "category": "telemetry",
        "output": "js-debug/dap/operation",
        "data": {
          "VSCode.ABExp.Features": "livesharecontinuousaacf;reusableLinks;RemoveKernelToolbarInInteractiveWindow;portForwardingServiceEnabled-development;portForwardingServiceEnabled-staging;portForwardingServiceEnabled-production;test11-04-2020;DFHDFSDTcf;mindaroBinariesVersion;mindaroBinariesVersion-1.0.20210702;mindaroBinariesVersion-1.0.20210723;account-aa",
          "abexp.assignmentcontext": "vsliv368cf:30146710;vsreu685:30147344;python383:30185418;vspor879:30202332;vspor708:30202333;vspor363:30204092;vstes627:30244334;vsdfh931cf:30280410;binariesv615:30325510;bridge0708:30335490;bridge0723:30353136;vsaa593:30376534;",
          "errors": [],
          "initialize": {
            "operation": "initialize",
            "totalTime": 0.3,
            "max": 0.3,
            "avg": 0.3,
            "stddev": null,
            "count": 1,
            "failed": 0
          },
          "!initialize.errors": [],
          "setBreakpoints": {
            "operation": "setBreakpoints",
            "totalTime": 5.4,
            "max": 2.7,
            "avg": 2.7,
            "stddev": 0,
            "count": 2,
            "failed": 0
          },
          "!setBreakpoints.errors": [],
          "setExceptionBreakpoints": {
            "operation": "setExceptionBreakpoints",
            "totalTime": 0.2,
            "max": 0.2,
            "avg": 0.2,
            "stddev": null,
            "count": 1,
            "failed": 0
          },
          "!setExceptionBreakpoints.errors": [],
          "configurationDone": {
            "operation": "configurationDone",
            "totalTime": 0.2,
            "max": 0.2,
            "avg": 0.2,
            "stddev": null,
            "count": 1,
            "failed": 0
          },
          "!configurationDone.errors": [],
          "threads": {
            "operation": "threads",
            "totalTime": 0.2,
            "max": 0.2,
            "avg": 0.2,
            "stddev": null,
            "count": 1,
            "failed": 0
          },
          "!threads.errors": [],
          "attach": {
            "operation": "attach",
            "totalTime": 724.3,
            "max": 724.3,
            "avg": 724.3,
            "stddev": null,
            "count": 1,
            "failed": 0
          },
          "!attach.errors": [],
          "loadedSources": {
            "operation": "loadedSources",
            "totalTime": 0.3,
            "max": 0.3,
            "avg": 0.3,
            "stddev": null,
            "count": 1,
            "failed": 0
          },
          "!loadedSources.errors": []
        }
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223153278,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "breakpointLocations",
      "arguments": {
        "source": {
          "name": "App.tsx",
          "path": "/home/chris/code/bloglist-frontend/src/App.tsx"
        },
        "line": 54
      },
      "type": "request",
      "seq": 9
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223153279,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 14,
      "type": "response",
      "request_seq": 9,
      "command": "breakpointLocations",
      "success": true,
      "body": {
        "breakpoints": []
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223153285,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "breakpointLocations",
      "arguments": {
        "source": {
          "name": "App.tsx",
          "path": "/home/chris/code/bloglist-frontend/src/App.tsx"
        },
        "line": 62
      },
      "type": "request",
      "seq": 10
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223153285,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "breakpointLocations",
      "arguments": {
        "source": {
          "name": "App.tsx",
          "path": "/home/chris/code/bloglist-frontend/src/App.tsx"
        },
        "line": 67
      },
      "type": "request",
      "seq": 11
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223153285,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 15,
      "type": "response",
      "request_seq": 10,
      "command": "breakpointLocations",
      "success": true,
      "body": {
        "breakpoints": []
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223153285,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 16,
      "type": "response",
      "request_seq": 11,
      "command": "breakpointLocations",
      "success": true,
      "body": {
        "breakpoints": []
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.send",
  "timestamp": 1651223158280,
  "metadata": {
    "connectionId": 19,
    "message": {
      "seq": 17,
      "type": "event",
      "event": "output",
      "body": {
        "category": "telemetry",
        "output": "js-debug/dap/operation",
        "data": {
          "VSCode.ABExp.Features": "livesharecontinuousaacf;reusableLinks;RemoveKernelToolbarInInteractiveWindow;portForwardingServiceEnabled-development;portForwardingServiceEnabled-staging;portForwardingServiceEnabled-production;test11-04-2020;DFHDFSDTcf;mindaroBinariesVersion;mindaroBinariesVersion-1.0.20210702;mindaroBinariesVersion-1.0.20210723;account-aa",
          "abexp.assignmentcontext": "vsliv368cf:30146710;vsreu685:30147344;python383:30185418;vspor879:30202332;vspor708:30202333;vspor363:30204092;vstes627:30244334;vsdfh931cf:30280410;binariesv615:30325510;bridge0708:30335490;bridge0723:30353136;vsaa593:30376534;",
          "errors": [],
          "breakpointLocations": {
            "operation": "breakpointLocations",
            "totalTime": 1.5,
            "max": 0.7,
            "avg": 0.5,
            "stddev": 0.2,
            "count": 3,
            "failed": 0
          },
          "!breakpointLocations.errors": []
        }
      }
    }
  },
  "level": 0
}
{
  "tag": "dap.receive",
  "timestamp": 1651223562073,
  "metadata": {
    "connectionId": 19,
    "message": {
      "command": "disconnect",
      "arguments": {
        "restart": false
      },
      "type": "request",
      "seq": 12
    }
  },
  "level": 0
}